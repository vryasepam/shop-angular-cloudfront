service: aws-angular-s3-serverless-finch
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  profile: default

plugins:
  - serverless-finch
  - serverless-single-page-app-plugin

custom:
  client:
    bucketName: aws-angular-serverless-bucket
    distributionFolder: dist/app/browser
    indexDocument: index.html
    manageResources: false
  s3LocalPath: ${self:custom.client.distributionFolder}/
  s3BucketName: ${self:custom.client.bucketName}

resources:
  Resources:
    WebAppS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.s3BucketName}
        AccessControl: Private
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html

    WebAppS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: WebAppS3Bucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Action:
                - s3:GetObject
              Resource: arn:aws:s3:::${self:custom.s3BucketName}/*
              Principal:
                AWS:
                  !Join [
                    " ",
                    [
                      "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity",
                      !Ref OriginAccessIdentity,
                    ],
                  ]

    OriginAccessIdentity:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: Access identity between CloudFront and S3 bucket

    WebAppCloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Origins:
            - DomainName: !GetAtt WebAppS3Bucket.RegionalDomainName
              Id: myS3Origin
              S3OriginConfig:
                OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${OriginAccessIdentity}
          Enabled: true
          IPV6Enabled: true
          HttpVersion: http2
          DefaultRootObject: index.html
          DefaultCacheBehavior:
            AllowedMethods: ["GET", "HEAD", "OPTIONS"]
            CachedMethods: ["GET", "HEAD", "OPTIONS"]
            ForwardedValues:
              Headers:
                [
                  "Access-Control-Request-Headers",
                  "Access-Control-Request-Method",
                  "Origin",
                  "Authorization",
                ]
              QueryString: false
              Cookies:
                Forward: none
            TargetOriginId: myS3Origin
            ViewerProtocolPolicy: redirect-to-https
            Compress: true
            DefaultTTL: 0
          ViewerCertificate:
            CloudFrontDefaultCertificate: "true"
          CustomErrorResponses:
            - ErrorCachingMinTTL: 10
              ErrorCode: 403
              ResponseCode: 200
              ResponsePagePath: /index.html

  Outputs:
    WebAppS3BucketOutput:
      Value:
        "Ref": WebAppS3Bucket
    WebAppCloudFrontDistributionOutput:
      Value:
        "Fn::GetAtt": [WebAppCloudFrontDistribution, DomainName]
